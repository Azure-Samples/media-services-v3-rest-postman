{
	"info": {
		"_postman_id": "68de5b33-7719-4f1c-a9ee-98ccbf04f80f",
		"name": "Media Services v3 (2018-07-01 GA)",
		"description": "Azure Media Services v3 API Collection. Last Modified Date: 05/22/20",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Step 1:  Get AAD Auth Token",
			"item": [
				{
					"name": "Get Azure AD Token for Service Principal Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var json = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"AccessToken\", json.access_token);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Keep-Alive",
								"value": "true"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"description": "This is always set to client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{aadClientId}}",
									"description": "The Client ID for your AAD application",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{aadClientSecret}}",
									"description": "The Client Secret (key) for your AAD application Service principal. This is URL Encoded on the wire.",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "https://management.core.windows.net/",
									"description": "Normally this is https://management.core.windows.net/ \nIt can vary based on the specific Azure Cloud you are using. \nFor Gov Cloud, China, Germany or other soverign cloud, please check the appropriate Azure management API endpoint URL settings in the documentation. ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/:aadTenantDomain/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								":aadTenantDomain",
								"oauth2",
								"token"
							],
							"variable": [
								{
									"key": "aadTenantDomain",
									"value": "{{aadTenantDomain}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "To get started making calls to Azure Media Services you have to first get an AAD auth JWT token\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ced91c7c-1679-4077-9277-d2c0bbbae43f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fd712bf7-f4d4-4827-aa1b-714ce1651ab1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Operations",
			"item": [
				{
					"name": "List Operations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/providers/Microsoft.Media/operations?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"providers",
								"Microsoft.Media",
								"operations"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							]
						},
						"description": "Lists all the Media Services operations."
					},
					"response": []
				}
			],
			"description": "Required for all Azure Resource Management providers.  The List operation returns back all available operations. ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "655337dd-c3f7-42fb-a027-4889740274c4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e2225f18-de6d-4ec4-81c0-6ef2ab3fa108",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Media Accounts",
			"item": [
				{
					"name": "List Media Services accounts (subscription)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/providers/Microsoft.Media/mediaservices?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"providers",
								"Microsoft.Media",
								"mediaservices"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								}
							]
						},
						"description": "List Media Services accounts in the subscription."
					},
					"response": []
				},
				{
					"name": "List Media Services accounts (resource group)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								}
							]
						},
						"description": "List Media Services accounts in the resource group"
					},
					"response": []
				},
				{
					"name": "List Media Edge Policies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deviceId\": \"contosiothubhost_contosoiotdevice\"\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroupName/providers/Microsoft.Media/mediaservices/:accountName/listEdgePolicies?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroupName",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"listEdgePolicies"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"type": "string",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroupName",
									"type": "string",
									"value": "{{resourceGroupName}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "List the media edge policies associated with the Media Services account."
					},
					"response": []
				},
				{
					"name": "Get a Media Services account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Get the details of a Media Services account"
					},
					"response": []
				},
				{
					"name": "Create or update a Media Services account",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"location\": \"{{location}}\",\r\n      \"tags\": {\r\n        \"createdBy\": \"user name\"\r\n      },\r\n      \"properties\": {\r\n        \"storageAccounts\": [\r\n          {\r\n            \"id\": \"/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroup}}/providers/Microsoft.Storage/storageAccounts/{{storageAccountName}}\",\r\n            \"type\": \"Primary\"\r\n          }\r\n        ]\r\n      }\r\n}\r\n\t"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Creates or updates a Media Services account"
					},
					"response": []
				},
				{
					"name": "Update a Media Services account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"tags\": {\r\n        \"key1\": \"value3\"\r\n      }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Updates an existing Media Services account"
					},
					"response": []
				},
				{
					"name": "Delete a Media Services account.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Deletes a Media Services account"
					},
					"response": []
				},
				{
					"name": "Synchronizes Storage Account Keys",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{storageAccountName}}\"\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/syncStorageKeys?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"syncStorageKeys"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Synchronizes storage account keys for a storage account associated with the Media Service account."
					},
					"response": []
				},
				{
					"name": "Check Name Availability",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"your_name\",\n\t\"type\":\"Microsoft.Media/mediaservices\"\n}\n"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/providers/Microsoft.Media/locations/:locationName/checkNameAvailability?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"providers",
								"Microsoft.Media",
								"locations",
								":locationName",
								"checkNameAvailability"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "locationName",
									"value": "{{locationName}}"
								}
							]
						},
						"description": "Checks whether the Media Service resource name is available."
					},
					"response": []
				},
				{
					"name": "Get a Media Services account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/providers/Microsoft.Media/mediaservices/:accountName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Get the details of a Media Services account"
					},
					"response": []
				}
			],
			"description": "Media Services Accounts",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d0ee9f0d-ba61-40a5-ae59-397fdd09692a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e84e8ebe-5b9b-4e31-9bcc-f5fd1eff109c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Assets",
			"item": [
				{
					"name": "List Assets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "$filter",
									"value": "{{$filter}}",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "{{$top}}",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "{{$orderby}}",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "List Assets in the Media Services account with optional filtering and ordering"
					},
					"response": []
				},
				{
					"name": "List Assets (by Created Date)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets?api-version={{api-version}}&$orderby=properties/created",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "$filter",
									"value": "{{$filter}}",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "{{$top}}",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "properties/created"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "List Assets in the Media Services account with optional filtering and ordering"
					},
					"response": []
				},
				{
					"name": "List Assets (by date range filter)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets?api-version={{api-version}}&$filter=properties/created gt 2012-06-01 and properties/created lt 2013-07-01",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "$filter",
									"value": "properties/created gt 2012-06-01 and properties/created lt 2013-07-01",
									"description": "Date Range Filter"
								},
								{
									"key": "$top",
									"value": "{{$top}}",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "List Assets in the Media Services account with optional filtering and ordering"
					},
					"response": []
				},
				{
					"name": "Get an Asset",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								}
							]
						},
						"description": "Get the details of an Asset in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create or update an Asset",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"description\": \"A documentary showing the ascent of Mount Logan\",\r\n    \"alternateId\": \"(Optional) some GUID\",\r\n    \"storageAccountName\": \"(Optional) someStorageAccount\",\r\n    \"container\": \"(Optional) custom container name if you want\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								}
							]
						},
						"description": "Creates or updates an Asset in the Media Services account\n\nSet the alternateId to a value for tracking in external systems\n\nSet the storageAccountName to any storage account registered with the Media Services account if you want to target the asset creation to a specific storage account. Container names are generated automatically if not provided\n\ncontainerName - Provide a custom container name on creation"
					},
					"response": []
				},
				{
					"name": "Update an Asset",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"description\": \"A documentary showing the ascent of Mount Baker in HD\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								}
							]
						},
						"description": "Updates an existing Asset in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Delete an Asset.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								}
							]
						},
						"description": "Deletes an Asset in the Media Services account"
					},
					"response": []
				},
				{
					"name": "List the Asset URLs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"permissions\": \"ReadWrite\",\r\n  \"expiryTime\": \"2018-01-01T10:00:00.007Z\"\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName/listContainerSas?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName",
								"listContainerSas"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								}
							]
						},
						"description": "Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys."
					},
					"response": []
				},
				{
					"name": "Gets the Asset storage key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName/getEncryptionKey?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName",
								"getEncryptionKey"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								}
							]
						},
						"description": "Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API"
					},
					"response": []
				},
				{
					"name": "List Streaming Locators",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName/listStreamingLocators?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName",
								"listStreamingLocators"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								}
							]
						},
						"description": "Lists Streaming Locators which are associated with this asset."
					},
					"response": []
				},
				{
					"name": "List Asset Filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName/assetFilters?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName",
								"assetFilters"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								}
							]
						},
						"description": "List Asset Filters associated with the specified Asset."
					},
					"response": []
				},
				{
					"name": "Get an Asset Filter.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName/assetFilters/:filterName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName",
								"assetFilters",
								":filterName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								},
								{
									"key": "filterName",
									"value": "{{filterName}}"
								}
							]
						},
						"description": "Get the details of an Asset Filter associated with the specified Asset."
					},
					"response": []
				},
				{
					"name": "Create or update an Asset Filter",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"presentationTimeRange\": {\r\n      \"startTimestamp\": 0,\r\n      \"endTimestamp\": 170000000,\r\n      \"presentationWindowDuration\": 9223372036854775807,\r\n      \"liveBackoffDuration\": 0,\r\n      \"timescale\": 10000000,\r\n      \"forceEndTimestamp\": false\r\n    },\r\n    \"firstQuality\": {\r\n      \"bitrate\": 128000\r\n    },\r\n    \"tracks\": [\r\n      {\r\n        \"trackSelections\": [\r\n          {\r\n            \"property\": \"Type\",\r\n            \"operation\": \"Equal\",\r\n            \"value\": \"Audio\"\r\n          },\r\n          {\r\n            \"property\": \"Language\",\r\n            \"operation\": \"NotEqual\",\r\n            \"value\": \"en\"\r\n          },\r\n          {\r\n            \"property\": \"FourCC\",\r\n            \"operation\": \"NotEqual\",\r\n            \"value\": \"EC-3\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"trackSelections\": [\r\n          {\r\n            \"property\": \"Type\",\r\n            \"operation\": \"Equal\",\r\n            \"value\": \"Video\"\r\n          },\r\n          {\r\n            \"property\": \"Bitrate\",\r\n            \"operation\": \"Equal\",\r\n            \"value\": \"3000000-5000000\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName/assetFilters/:filterName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName",
								"assetFilters",
								":filterName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								},
								{
									"key": "filterName",
									"value": "{{filterName}}"
								}
							]
						},
						"description": "Creates or updates an Asset Filter associated with the specified Asset."
					},
					"response": []
				},
				{
					"name": "Update an Asset Filter",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"presentationTimeRange\": {\r\n      \"startTimestamp\": 10,\r\n      \"endTimestamp\": 170000000,\r\n      \"presentationWindowDuration\": 9223372036854775807,\r\n      \"liveBackoffDuration\": 0,\r\n      \"timescale\": 10000000,\r\n      \"forceEndTimestamp\": false\r\n    },\r\n    \"firstQuality\": {\r\n      \"bitrate\": 128000\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName/assetFilters/:filterName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName",
								"assetFilters",
								":filterName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								},
								{
									"key": "filterName",
									"value": "{{filterName}}"
								}
							]
						},
						"description": "Updates an existing Asset Filter associated with the specified Asset."
					},
					"response": []
				},
				{
					"name": "Delete an Asset Filter.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/assets/:assetName/assetFilters/:filterName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"assets",
								":assetName",
								"assetFilters",
								":filterName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "assetName",
									"value": "{{assetName}}"
								},
								{
									"key": "filterName",
									"value": "{{filterName}}"
								}
							]
						},
						"description": "Deletes an Asset Filter associated with the specified Asset."
					},
					"response": []
				}
			],
			"description": "Folder for subscriptions"
		},
		{
			"name": "Content Key Policies",
			"item": [
				{
					"name": "List Content Key Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies?api-version={{api-version}}&$filter={{$filter}}&$top={{$top}}&$orderby={{$orderby}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "$filter",
									"value": "{{$filter}}"
								},
								{
									"key": "$top",
									"value": "{{$top}}"
								},
								{
									"key": "$orderby",
									"value": "{{$orderby}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Lists the Content Key Policies in the account"
					},
					"response": []
				},
				{
					"name": "List Content Key Policies (In Date Range)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies?api-version={{api-version}}&$filter=properties/lastModified gt 2018-06-01 and properties/created lt 2013-07-01",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "$filter",
									"value": "properties/lastModified gt 2018-06-01 and properties/created lt 2013-07-01",
									"description": "In date range"
								},
								{
									"key": "$top",
									"value": "{{$top}}",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "{{$orderby}}",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Lists the Content Key Policies in the account"
					},
					"response": []
				},
				{
					"name": "List Content Key Policies (by Last Modified)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies?api-version={{api-version}}&$orderBy=properties/lastModified",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "$filter",
									"value": "{{$filter}}",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "{{$top}}",
									"disabled": true
								},
								{
									"key": "$orderBy",
									"value": "properties/lastModified",
									"description": "Order By last Modified"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Lists the Content Key Policies in the account"
					},
					"response": []
				},
				{
					"name": "Get a Content Key Policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Get the details of a Content Key Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create Content Key Policy (Multi-Options)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"description\": \"Policy Description\",\r\n    \"options\": [\r\n      {\r\n        \"name\": \"ClearKeyOption\",\r\n        \"configuration\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration\"\r\n        },\r\n        \"restriction\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyTokenRestriction\",\r\n          \"issuer\": \"urn:issuer\",\r\n          \"audience\": \"urn:audience\",\r\n          \"primaryVerificationKey\": {\r\n            \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicySymmetricTokenKey\",\r\n            \"keyValue\": \"AAAAAAAAAAAAAAAAAAAAAA==\"\r\n          },\r\n          \"restrictionTokenType\": \"Swt\"\r\n        }\r\n      },\r\n      {\r\n        \"name\": \"widevineoption\",\r\n        \"configuration\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyWidevineConfiguration\",\r\n          \"widevineTemplate\": \"{\\\"allowed_track_types\\\":\\\"SD_HD\\\",\\\"content_key_specs\\\":[{\\\"track_type\\\":\\\"SD\\\",\\\"security_level\\\":1,\\\"required_output_protection\\\":{\\\"hdcp\\\":\\\"HDCP_V2\\\"}}],\\\"policy_overrides\\\":{\\\"can_play\\\":true,\\\"can_persist\\\":true,\\\"can_renew\\\":false}}\"\r\n        },\r\n        \"restriction\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyOpenRestriction\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Create or update a Content Key Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create Content Key Policy (No DRM Token)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"description\": \"ArmPolicyDescription\",\r\n    \"options\": [\r\n      {\r\n        \"name\": \"ClearKeyOption\",\r\n        \"configuration\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration\"\r\n        },\r\n        \"restriction\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyTokenRestriction\",\r\n          \"issuer\": \"urn:issuer\",\r\n          \"audience\": \"urn:audience\",\r\n          \"primaryVerificationKey\": {\r\n            \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicySymmetricTokenKey\",\r\n            \"keyValue\": \"AAAAAAAAAAAAAAAAAAAAAA==\"\r\n          },\r\n          \"restrictionTokenType\": \"Swt\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Create or update a Content Key Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create Content Key Policy (PlayReady Open)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"policyId\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"description\": \"ArmPolicyDescription\",\r\n    \"options\": [\r\n      {\r\n        \"policyOptionId\": \"00000000-0000-0000-0000-000000000000\",\r\n        \"name\": \"ArmPolicyOptionName\",\r\n        \"configuration\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration\",\r\n          \"licenses\": [\r\n            {\r\n              \"allowTestDevices\": true,\r\n              \"beginDate\": \"2017-10-16T18:22:53.46Z\",\r\n              \"playRight\": {\r\n                \"scmsRestriction\": 2,\r\n                \"imageConstraintForAnalogComponentVideoRestriction\": true,\r\n                \"allowPassingVideoContentToUnknownOutput\": \"NotAllowed\"\r\n              },\r\n              \"licenseType\": \"Persistent\",\r\n              \"contentKeyLocation\": {\r\n                \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader\"\r\n              },\r\n              \"contentType\": \"UltraVioletDownload\"\r\n            }\r\n          ]\r\n        },\r\n        \"restriction\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyOpenRestriction\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Create or update a Content Key Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create Content Key Policy (Widevine Token)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"description\": \"ArmPolicyDescription\",\r\n    \"options\": [\r\n      {\r\n        \"name\": \"widevineoption\",\r\n        \"configuration\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyWidevineConfiguration\",\r\n          \"widevineTemplate\": \"{\\\"allowed_track_types\\\":\\\"SD_HD\\\",\\\"content_key_specs\\\":[{\\\"track_type\\\":\\\"SD\\\",\\\"security_level\\\":1,\\\"required_output_protection\\\":{\\\"hdcp\\\":\\\"HDCP_V2\\\"}}],\\\"policy_overrides\\\":{\\\"can_play\\\":true,\\\"can_persist\\\":true,\\\"can_renew\\\":false}}\"\r\n        },\r\n        \"restriction\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyTokenRestriction\",\r\n          \"issuer\": \"urn:issuer\",\r\n          \"audience\": \"urn:audience\",\r\n          \"primaryVerificationKey\": {\r\n            \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyRsaTokenKey\",\r\n            \"exponent\": \"AQAB\",\r\n            \"modulus\": \"AQAD\"\r\n          },\r\n          \"alternateVerificationKeys\": [\r\n            {\r\n              \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicySymmetricTokenKey\",\r\n              \"keyValue\": \"AAAAAAAAAAAAAAAAAAAAAA==\"\r\n            }\r\n          ],\r\n          \"restrictionTokenType\": \"Jwt\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Create or update a Content Key Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create Content Key Policy (FairPlay Offline)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"options\": [\r\n      {\r\n        \"name\": \"FairPlayOffline\",\r\n        \"configuration\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration\",\r\n          \"ask\": \"XXXXXXXXXXXXXXXXX\",\r\n          \"fairPlayPfxPassword\": \"XXXXXXXXXXXXXXXXX\",\r\n          \"fairPlayPfx\": \"XXXXXXXXXXXXXXXXX\",\r\n          \"rentalAndLeaseKeyType\": \"DualExpiry\",\r\n          \"rentalDuration\": 0,\r\n          \"offlineRentalConfiguration\": {\r\n            \"storageDurationSeconds\": 300000,\r\n            \"playbackDurationSeconds\": 500000\r\n          }\r\n        },\r\n        \"restriction\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyOpenRestriction\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Create a FairPlay Offline Content Key Policy.  Update the properties for ask, fairPlayPfxPassword, adn fairPlayPfx with the values you received from Apple after registration for FairPlay certificate"
					},
					"response": []
				},
				{
					"name": "Update a Content Key Policy",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"description\": \"Updated Policy\",\r\n    \"options\": [\r\n      {\r\n        \"name\": \"ClearKeyOption\",\r\n        \"configuration\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration\"\r\n        },\r\n        \"restriction\": {\r\n          \"@odata.type\": \"#Microsoft.Media.ContentKeyPolicyOpenRestriction\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Updates an existing Content Key Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Delete a Content Key Policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Deletes a Content Key Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Get a Content Key Policy with secrets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/contentKeyPolicies/:contentKeyPolicyName/getPolicyPropertiesWithSecrets?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"contentKeyPolicies",
								":contentKeyPolicyName",
								"getPolicyPropertiesWithSecrets"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "contentKeyPolicyName",
									"value": "{{contentKeyPolicyName}}"
								}
							]
						},
						"description": "Get a Content Key Policy including secret values"
					},
					"response": []
				}
			],
			"description": "Content Key Policies",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2112318f-fb88-4915-a29b-d6bbf37b6af4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8915ce7c-3e62-4e09-a1d2-a82b2788458f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Account Filters (Global)",
			"item": [
				{
					"name": "List Account Filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/accountFilters?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"accountFilters"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "List Account Filters in the Media Services account."
					},
					"response": []
				},
				{
					"name": "Get an Account Filter.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/accountFilters/:filterName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"accountFilters",
								":filterName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "filterName",
									"value": "{{filterName}}"
								}
							]
						},
						"description": "Get the details of an Account Filter in the Media Services account."
					},
					"response": []
				},
				{
					"name": "Create or update an Account Filter",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"properties\": {\r\n        \"tracks\": [\r\n       \r\n          {\r\n            \"trackSelections\": [\r\n              {\r\n                \"property\": \"Type\",\r\n                \"operation\": \"Equal\",\r\n                \"value\": \"Video\"\r\n              },\r\n              {\r\n                \"property\": \"Bitrate\",\r\n                \"operation\": \"Equal\",\r\n                \"value\": \"0-1000000\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/accountFilters/:filterName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"accountFilters",
								":filterName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "filterName",
									"value": "{{filterName}}"
								}
							]
						},
						"description": "Creates or updates an Account Filter in the Media Services account."
					},
					"response": []
				},
				{
					"name": "Update an Account Filter",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n      \"properties\": {\r\n        \"presentationTimeRange\": {\r\n          \"startTimestamp\": 10,\r\n          \"endTimestamp\": 170000000,\r\n          \"presentationWindowDuration\": 9223372036854775807,\r\n          \"liveBackoffDuration\": 0,\r\n          \"timescale\": 10000000,\r\n          \"forceEndTimestamp\": false\r\n        },\r\n        \"firstQuality\": {\r\n          \"bitrate\": 128000\r\n        }\r\n      }\r\n    }"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/accountFilters/:filterName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"accountFilters",
								":filterName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "filterName",
									"value": "{{filterName}}"
								}
							]
						},
						"description": "Updates an existing Account Filter in the Media Services account."
					},
					"response": []
				},
				{
					"name": "Delete an Account Filter.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/accountFilters/:filterName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"accountFilters",
								":filterName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "filterName",
									"value": "{{filterName}}"
								}
							]
						},
						"description": "Deletes an Account Filter in the Media Services account."
					},
					"response": []
				}
			],
			"description": "Folder for subscriptions"
		},
		{
			"name": "Transforms and Jobs",
			"item": [
				{
					"name": "List Transforms",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Lists the Transforms in the account."
					},
					"response": []
				},
				{
					"name": "Get Transform",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								}
							]
						},
						"description": "Gets a Transform."
					},
					"response": []
				},
				{
					"name": "Create or Update Transform",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"properties\": {\r\n        \"description\": \"Basic Transform using an Adaptive Streaming encoding preset from the library of built-in Standard Encoder presets\",\r\n        \"outputs\": [\r\n            {\r\n                \"onError\": \"StopProcessingJob\",\r\n                \"relativePriority\": \"Normal\",\r\n                \"preset\": {\r\n                    \"@odata.type\": \"#Microsoft.Media.BuiltInStandardEncoderPreset\",\r\n                    \"presetName\": \"AdaptiveStreaming\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								}
							]
						},
						"description": "Creates or updates a new Transform."
					},
					"response": []
				},
				{
					"name": "Update Transform",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"description\": \"Basic Transform using an Adaptive Streaming encoding preset from the libray of built-in Standard Encoder presets\",\r\n      \"outputs\": [\r\n        {\r\n          \"onError\": \"StopProcessingJob\",\r\n      \"relativePriority\": \"Normal\",\r\n          \"preset\": {\r\n            \"@odata.type\": \"#Microsoft.Media.BuiltInStandardEncoderPreset\",\r\n            \"presetName\": \"H264MultipleBitrate720p\"\r\n          }\r\n        }\r\n      ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								}
							]
						},
						"description": "Updates a Transform."
					},
					"response": []
				},
				{
					"name": "Delete Transform",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								}
							]
						},
						"description": "Deletes a Transform."
					},
					"response": []
				},
				{
					"name": "List Jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName/jobs?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName",
								"jobs"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								}
							]
						},
						"description": "Lists all of the Jobs for the Transform."
					},
					"response": []
				},
				{
					"name": "Get Job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName/jobs/:jobName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName",
								"jobs",
								":jobName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								},
								{
									"key": "jobName",
									"value": "{{jobName}}"
								}
							]
						},
						"description": "Gets a Job."
					},
					"response": []
				},
				{
					"name": "Create Job",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"properties\": {\r\n    \"input\": {\r\n      \"@odata.type\": \"#Microsoft.Media.JobInputHttp\",\r\n      \"baseUri\": \"https://nimbuscdn-nimbuspm.streaming.mediaservices.windows.net/2b533311-b215-4409-80af-529c3e853622/\",\r\n      \"files\": [\r\n      \t\t\"Ignite-short.mp4\"\r\n      \t]\r\n    },\r\n    \"outputs\": [\r\n      {\r\n        \"@odata.type\": \"#Microsoft.Media.JobOutputAsset\",\r\n        \"assetName\": \"myOutputAsset\"\r\n      }\r\n    ],\r\n    \"priority\" : \"Normal\",\r\n    \"correlationData\": {\r\n    \t\"myKey1\" :\"my custom correlation metadata for this job\"\r\n    }\r\n }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName/jobs/:jobName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName",
								"jobs",
								":jobName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								},
								{
									"key": "jobName",
									"value": "{{jobName}}"
								}
							]
						},
						"description": "Creates a Job."
					},
					"response": []
				},
				{
					"name": "Create Job with Sub Clipping",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"description\": \"A Job with transform cb9599fb-03b3-40eb-a2ff-7ea909f53735 and single clip.\",\r\n   \r\n    \"input\": {\r\n      \"@odata.type\": \"#Microsoft.Media.JobInputHttp\",\r\n      \"baseUri\": \"https://nimbuscdn-nimbuspm.streaming.mediaservices.windows.net/2b533311-b215-4409-80af-529c3e853622/\",\r\n      \"files\": [\r\n      \t\t\"Ignite-short.mp4\"\r\n      \t],\r\n      \"start\": {\r\n        \"@odata.type\": \"#Microsoft.Media.AbsoluteClipTime\",\r\n        \"time\": \"PT10S\"\r\n      },\r\n      \"end\": {\r\n        \"@odata.type\": \"#Microsoft.Media.AbsoluteClipTime\",\r\n        \"time\": \"PT40S\"\r\n      }\r\n    },\r\n  \r\n    \"outputs\": [\r\n      {\r\n        \"@odata.type\": \"#Microsoft.Media.JobOutputAsset\",\r\n        \"assetName\": \"myOutputAsset\"\r\n      }\r\n    ],\r\n    \"priority\": \"Normal\"\r\n  }\r\n}\r\n"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName/jobs/:jobName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName",
								"jobs",
								":jobName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								},
								{
									"key": "jobName",
									"value": "{{jobName}}"
								}
							]
						},
						"description": "Creates a Job."
					},
					"response": []
				},
				{
					"name": "Update Job",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"input\": {\r\n      \"@odata.type\": \"#Microsoft.Media.JobInputAsset\",\r\n      \"assetName\": \"job1-InputAsset\"\r\n    },\r\n    \"outputs\": [\r\n      {\r\n        \"@odata.type\": \"#Microsoft.Media.JobOutputAsset\",\r\n        \"assetName\": \"job1-OutputAsset\"\r\n      }\r\n    ],\r\n    \"priority\" : \"Normal\",\r\n    \"correlationData\": {\r\n      \"myKey1\" :\"my custom correlation metadata for this job\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName/jobs/:jobName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName",
								"jobs",
								":jobName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								},
								{
									"key": "jobName",
									"value": "{{jobName}}"
								}
							]
						},
						"description": "Updates a Job."
					},
					"response": []
				},
				{
					"name": "Delete Job",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName/jobs/:jobName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName",
								"jobs",
								":jobName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								},
								{
									"key": "jobName",
									"value": "{{jobName}}"
								}
							]
						},
						"description": "Deletes a Job."
					},
					"response": []
				},
				{
					"name": "Cancel Job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/transforms/:transformName/jobs/:jobName/cancelJob?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"transforms",
								":transformName",
								"jobs",
								":jobName",
								"cancelJob"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "transformName",
									"value": "{{transformName}}"
								},
								{
									"key": "jobName",
									"value": "{{jobName}}"
								}
							]
						},
						"description": "Cancel a Job."
					},
					"response": []
				}
			],
			"description": "Transforms and Jobs",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a3662aac-3f9b-478c-b202-80110f4f1868",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d953a4db-92e5-4151-ae1c-23daac525f2a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Streaming Polices and Locators",
			"item": [
				{
					"name": "List Streaming Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingPolicies?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingPolicies"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "$filter",
									"value": "{{$filter}}",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "{{$top}}",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "{{$orderby}}",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Lists the Streaming Policies in the account"
					},
					"response": []
				},
				{
					"name": "Get a Streaming Policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingPolicies/:streamingPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingPolicies",
								":streamingPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingPolicyName",
									"value": "{{streamingPolicyName}}"
								}
							]
						},
						"description": "Get the details of a Streaming Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create a Streaming Policy (clear)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"noEncryption\": {\r\n      \"enabledProtocols\": {\r\n        \"download\": true,\r\n        \"dash\": true,\r\n        \"hls\": true,\r\n        \"smoothStreaming\": true\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingPolicies/:streamingPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingPolicies",
								":streamingPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingPolicyName",
									"value": "{{streamingPolicyName}}"
								}
							]
						},
						"description": "Create a Streaming Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create a Streaming Policy (CENC cbcs Only)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"defaultContentKeyPolicyName\": \"PolicyWithMultipleOptions\",\r\n    \"commonEncryptionCbcs\": {\r\n      \"enabledProtocols\": {\r\n        \"download\": false,\r\n        \"dash\": false,\r\n        \"hls\": true,\r\n        \"smoothStreaming\": false\r\n      },\r\n      \"contentKeys\": {\r\n        \"defaultKey\": {\r\n          \"label\": \"cbcsDefaultKey\"\r\n        }\r\n      },\r\n      \"drm\": {\r\n        \"fairPlay\": {\r\n          \"customLicenseAcquisitionUrlTemplate\": \"https://example.com/{AssetAlternativeId}/fairplay/{ContentKeyId}\",\r\n          \"allowPersistentLicense\": true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingPolicies/:streamingPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingPolicies",
								":streamingPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingPolicyName",
									"value": "{{streamingPolicyName}}"
								}
							]
						},
						"description": "Create a Streaming Policy in the Media Services account using Common Encryption and CBCS only"
					},
					"response": []
				},
				{
					"name": "Create a Streaming Policy (CENC cenc Only)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"defaultContentKeyPolicyName\": \"PolicyWithPlayReadyOptionAndOpenRestriction\",\r\n    \"commonEncryptionCenc\": {\r\n      \"enabledProtocols\": {\r\n        \"download\": false,\r\n        \"dash\": true,\r\n        \"hls\": false,\r\n        \"smoothStreaming\": true\r\n      },\r\n      \"clearTracks\": [\r\n        {\r\n          \"trackSelections\": [\r\n            {\r\n              \"property\": \"FourCC\",\r\n              \"operation\": \"Equal\",\r\n              \"value\": \"hev1\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"contentKeys\": {\r\n        \"defaultKey\": {\r\n          \"label\": \"cencDefaultKey\"\r\n        }\r\n      },\r\n      \"drm\": {\r\n        \"playReady\": {\r\n          \"customLicenseAcquisitionUrlTemplate\": \"https://example.com/{AssetAlternativeId}/playready/{ContentKeyId}\",\r\n          \"playReadyCustomAttributes\": \"PlayReady CustomAttributes\"\r\n        },\r\n        \"widevine\": {\r\n          \"customLicenseAcquisitionUrlTemplate\": \"https://example.com/{AssetAlternativeId}/widevine/{ContentKeyId\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingPolicies/:streamingPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingPolicies",
								":streamingPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingPolicyName",
									"value": "{{streamingPolicyName}}"
								}
							]
						},
						"description": "Create a Streaming Policy in the Media Services account using Common Encryption and cenc only"
					},
					"response": []
				},
				{
					"name": "Create a Streaming Policy (AES Envelope Only) ",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"defaultContentKeyPolicyName\": \"PolicyWithClearKeyOptionAndTokenRestriction\",\r\n    \"envelopeEncryption\": {\r\n      \"enabledProtocols\": {\r\n        \"dash\": true,\r\n        \"hls\": true,\r\n        \"smoothStreaming\": true\r\n      },\r\n      \"contentKeys\": {\r\n        \"defaultKey\": {\r\n          \"label\": \"aesDefaultKey\"\r\n        }\r\n      },\r\n      \"customKeyAcquisitionUrlTemplate\": \"https://example.com/{AssetAlternativeId}/envelope/{ContentKeyId}\"\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingPolicies/:streamingPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingPolicies",
								":streamingPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingPolicyName",
									"value": "{{streamingPolicyName}}"
								}
							]
						},
						"description": "Create a Streaming Policy in the Media Services account using AES clear-key envelope encryption only"
					},
					"response": []
				},
				{
					"name": "Create a Streaming Policy (Secure Streaming) ",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"defaultContentKeyPolicyName\": \"PolicyWithMultipleOptions\",\r\n    \"envelopeEncryption\": {\r\n      \"enabledProtocols\": {\r\n        \"download\": false,\r\n        \"dash\": true,\r\n        \"hls\": true,\r\n        \"smoothStreaming\": true\r\n      },\r\n      \"contentKeys\": {\r\n        \"defaultKey\": {\r\n          \"label\": \"aesDefaultKey\"\r\n        }\r\n      },\r\n      \"customKeyAcquisitionUrlTemplate\": \"https://example.com/{AssetAlternativeId}/envelope/{ContentKeyId}\"\r\n    },\r\n    \"commonEncryptionCenc\": {\r\n      \"enabledProtocols\": {\r\n        \"download\": false,\r\n        \"dash\": true,\r\n        \"hls\": false,\r\n        \"smoothStreaming\": true\r\n      },\r\n      \"clearTracks\": [\r\n        {\r\n          \"trackSelections\": [\r\n            {\r\n              \"property\": \"FourCC\",\r\n              \"operation\": \"Equal\",\r\n              \"value\": \"hev1\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"contentKeys\": {\r\n        \"defaultKey\": {\r\n          \"label\": \"cencDefaultKey\"\r\n        }\r\n      },\r\n      \"drm\": {\r\n        \"playReady\": {\r\n          \"customLicenseAcquisitionUrlTemplate\": \"https://example.com/{AssetAlternativeId}/playready/{ContentKeyId}\",\r\n          \"playReadyCustomAttributes\": \"PlayReady CustomAttributes\"\r\n        },\r\n        \"widevine\": {\r\n          \"customLicenseAcquisitionUrlTemplate\": \"https://example.com/{AssetAlternativeId}/widevine/{ContentKeyId\"\r\n        }\r\n      }\r\n    },\r\n    \"commonEncryptionCbcs\": {\r\n      \"enabledProtocols\": {\r\n        \"download\": false,\r\n        \"dash\": false,\r\n        \"hls\": true,\r\n        \"smoothStreaming\": false\r\n      },\r\n      \"contentKeys\": {\r\n        \"defaultKey\": {\r\n          \"label\": \"cbcsDefaultKey\"\r\n        }\r\n      },\r\n      \"drm\": {\r\n        \"fairPlay\": {\r\n          \"customLicenseAcquisitionUrlTemplate\": \"https://example.com/{AssetAlternativeId}/fairplay/{ContentKeyId}\",\r\n          \"allowPersistentLicense\": true\r\n        }\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingPolicies/:streamingPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingPolicies",
								":streamingPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingPolicyName",
									"value": "{{streamingPolicyName}}"
								}
							]
						},
						"description": "Create a Streaming Policy in the Media Services account using mulitple secure streaming encryption settings"
					},
					"response": []
				},
				{
					"name": "Delete a Streaming Policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingPolicies/:streamingPolicyName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingPolicies",
								":streamingPolicyName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingPolicyName",
									"value": "{{streamingPolicyName}}"
								}
							]
						},
						"description": "Deletes a Streaming Policy in the Media Services account"
					},
					"response": []
				},
				{
					"name": "List Streaming Locators",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingLocators?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingLocators"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "$filter",
									"value": "{{$filter}}",
									"disabled": true
								},
								{
									"key": "$top",
									"value": "{{$top}}",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "{{$orderby}}",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Lists the Streaming Locators in the account"
					},
					"response": []
				},
				{
					"name": "Get a Streaming Locator",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingLocators/:streamingLocatorName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingLocators",
								":streamingLocatorName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingLocatorName",
									"value": "{{streamingLocatorName}}"
								}
							]
						},
						"description": "Get the details of a Streaming Locator in the Media Services account"
					},
					"response": []
				},
				{
					"name": "Create a Streaming Locator (clear)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"streamingPolicyName\": \"clearStreamingPolicy\",\r\n    \"assetName\": \"myOutputAsset\",\r\n    \"contentKeys\": [],\r\n    \"filters\": []\r\n }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingLocators/:streamingLocatorName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingLocators",
								":streamingLocatorName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingLocatorName",
									"value": "{{streamingLocatorName}}"
								}
							]
						},
						"description": "Create a Streaming Locator in the Media Services account that is in the clear"
					},
					"response": []
				},
				{
					"name": "Create a Streaming Locator (secure - userDefined)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"assetName\": \"myOutputAsset\",\r\n    \"streamingPolicyName\": \"secureStreamingPolicy\",\r\n    \"streamingLocatorId\": \"90000000-0000-0000-0000-00000000000A\",\r\n    \"filters\": [],\r\n   \"contentKeys\": [\r\n      {\r\n        \"LabelReferenceInStreamingPolicy\": \"aesDefaultKey\",\r\n        \"Id\": \"60000000-0000-0000-0000-000000000001\",\r\n        \"Value\": \"1UqLohAfWsEGkULYxHjYZg==\"\r\n      },\r\n      {\r\n        \"LabelReferenceInStreamingPolicy\": \"cencDefaultKey\",\r\n        \"Id\": \"60000000-0000-0000-0000-000000000004\",\r\n        \"Value\": \"4UqLohAfWsEGkULYxHjYZg==\"\r\n      },\r\n      {\r\n        \"LabelReferenceInStreamingPolicy\": \"cbcsDefaultKey\",\r\n        \"Id\": \"60000000-0000-0000-0000-000000000007\",\r\n        \"Value\": \"7UqLohAfWsEGkULYxHjYZg==\"\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingLocators/:streamingLocatorName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingLocators",
								":streamingLocatorName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingLocatorName",
									"value": "{{streamingLocatorName}}"
								}
							]
						},
						"description": "Create a Streaming Locator in the Media Services account that is secure and uses a user defined set of content key"
					},
					"response": []
				},
				{
					"name": "Create a Streaming Locator (secure ) ",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"properties\": {\r\n    \"streamingPolicyName\": \"secureStreamingPolicy\",\r\n    \"assetName\": \"myOutputAsset\",\r\n    \"contentKeys\": [],\r\n    \"filters\": [],\r\n    \"startTime\": \"2018-03-01T00:00:00Z\",\r\n    \"endTime\": \"2028-12-31T23:59:59.9999999Z\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingLocators/:streamingLocatorName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingLocators",
								":streamingLocatorName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingLocatorName",
									"value": "{{streamingLocatorName}}"
								}
							]
						},
						"description": "Create a Streaming Locator in the Media Services account that is secure"
					},
					"response": []
				},
				{
					"name": "Delete a Streaming Locator",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingLocators/:streamingLocatorName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingLocators",
								":streamingLocatorName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingLocatorName",
									"value": "{{streamingLocatorName}}"
								}
							]
						},
						"description": "Deletes a Streaming Locator in the Media Services account"
					},
					"response": []
				},
				{
					"name": "List Content Keys",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingLocators/:streamingLocatorName/listContentKeys?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingLocators",
								":streamingLocatorName",
								"listContentKeys"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingLocatorName",
									"value": "{{streamingLocatorName}}"
								}
							]
						},
						"description": "List Content Keys used by this Streaming Locator"
					},
					"response": []
				},
				{
					"name": "List Paths",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaServices/:accountName/streamingLocators/:streamingLocatorName/listPaths?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaServices",
								":accountName",
								"streamingLocators",
								":streamingLocatorName",
								"listPaths"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingLocatorName",
									"value": "{{streamingLocatorName}}"
								}
							]
						},
						"description": "List Paths supported by this Streaming Locator"
					},
					"response": []
				}
			],
			"description": "Streaming Policies and Locators",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0cafddc8-c4bf-483a-8c58-5470fefebc9e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "25e37f97-79d0-420f-8992-d549e6c2a15b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Streaming and Live",
			"item": [
				{
					"name": "List Live Events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Lists the Live Events in the account."
					},
					"response": []
				},
				{
					"name": "Get Live Event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Gets a Live Event."
					},
					"response": []
				},
				{
					"name": "Create Live Event - Async (pass-through)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6b967e4-fa42-4b8c-b1e6-2f6f0151f176",
								"exec": [
									"// This is an async operation so we expect a 202 Accepted response",
									"pm.test(\"Status code is 202 Accepted. Check the Header Azure-AsyncOperation and call the value for status polling\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"// Check that we have an Azure-Async Operation header ",
									"pm.test(\"Azure-AsyncOperation Header exists\", function () {",
									"    pm.response.to.have.header(\"Azure-AsyncOperation\");",
									"});",
									"",
									"",
									"pm.environment.set(\"Last-Azure-AsyncOperation\", pm.response.headers.get(\"Azure-AsyncOperation\") );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"location\": \"{{location}}\",\r\n    \"properties\": {\r\n        \"description\": \"Simple Live Event using RTMP with 2-second keyframe interval and no ip restriction\",\r\n        \"vanityUrl\": true,\r\n        \"streamOptions\": [\r\n            \"LowLatency\"\r\n        ],\r\n        \"input\": {\r\n            \"streamingProtocol\": \"RTMP\",\r\n            \"accessToken\": \"3075cc04-62ab-4b37-9a4e-70fdb4521458\",\"keyFrameIntervalDuration\": \"PT2S\",\r\n            \"accessControl\": {\r\n                \"ip\": {\r\n                    \"allow\": [{\r\n                        \"name\": \"AllowAll\",\r\n                        \"address\": \"0.0.0.0\",\r\n                        \"subnetPrefixLength\": 0\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n        \"preview\": {\r\n            \"accessControl\": {\r\n                \"ip\": {\r\n                    \"allow\": [{\r\n                        \"name\": \"AllowAll\",\r\n                        \"address\": \"0.0.0.0\"\r\n                        \"subnetPrefixLength\": 0\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n        \"encoding\": {\r\n            \"encodingType\": \"None\",\r\n            \"presetName\": \"\"\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName?api-version={{api-version}}&autoStart={{autoStart}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "autoStart",
									"value": "{{autoStart}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Creates a Live Event with pass-through mode. No encoding. Update the accessToken to be a unique GUID for each LiveEvent that you create. NOTE: this is an asynchronous operation which can take time.  You should use standard Azure ARM async pattern to poll for the status of the provisioning of this resource. See - https://docs.microsoft.com/azure/azure-resource-manager/resource-manager-async-operations - The response code will be a 202 Accept, at which point you should parse the Azure-AsyncOperation header for the path to poll for status. Once the status is Succeeded, you can make a GET request on the LiveEvent to access the RTMP ingest URLs and the Preview manifest endpoints"
					},
					"response": []
				},
				{
					"name": "Create Live Event - Async (Standard 720P Live Encoder)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6b967e4-fa42-4b8c-b1e6-2f6f0151f176",
								"exec": [
									"// This is an async operation so we expect a 202 Accepted response",
									"pm.test(\"Status code is 202 Accepted. Check the Header Azure-AsyncOperation and call the value for status polling\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"// Check that we have an Azure-Async Operation header ",
									"pm.test(\"Azure-AsyncOperation Header exists\", function () {",
									"    pm.response.to.have.header(\"Azure-AsyncOperation\");",
									"});",
									"",
									"",
									"pm.environment.set(\"Last-Azure-AsyncOperation\", pm.response.headers.get(\"Azure-AsyncOperation\") );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"location\": \"{{location}}\",\r\n    \"properties\": {\r\n        \"description\": \"Simple Live Transcoding Basic Event using RTMP with 2-second keyframe interval and no ip restriction. Encoding Type supports Standard, or Premium1080p \",\r\n        \"vanityUrl\": true,\r\n        \"streamOptions\": [\r\n            \"LowLatency\"\r\n        ],\r\n        \"input\": {\r\n            \"streamingProtocol\": \"RTMP\",\r\n            \"accessToken\": \"3075cc04-62ab-4b37-9a4e-70fdb4521458\",\"keyFrameIntervalDuration\": \"PT2S\",\r\n            \"accessControl\": {\r\n                \"ip\": {\r\n                    \"allow\": [{\r\n                        \"name\": \"AllowAll\",\r\n                        \"address\": \"0.0.0.0\",\r\n                        \"subnetPrefixLength\": 0\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n        \"preview\": {\r\n            \"accessControl\": {\r\n                \"ip\": {\r\n                    \"allow\": [{\r\n                        \"name\": \"AllowAll\",\r\n                        \"address\": \"0.0.0.0\"\r\n                        \"subnetPrefixLength\": 0\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n        \"encoding\": {\r\n            \"encodingType\": \"Standard\",\r\n            \"presetName\": \"\"\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName?api-version={{api-version}}&autoStart={{autoStart}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "autoStart",
									"value": "{{autoStart}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Creates a Live Event with standard live encoder. NOTE: this is an asynchronous operation which can take time.  You should use standard Azure ARM async pattern to poll for the status of the provisioning of this resource. See - https://docs.microsoft.com/azure/azure-resource-manager/resource-manager-async-operations -  The response code will be a 202 Accept, at which point you should parse the Azure-AsyncOperation header for the path to poll for status. Once the status is Succeeded, you can make a GET request on the LiveEvent to access the RTMP ingest URLs and the Preview manifest endpoints"
					},
					"response": []
				},
				{
					"name": "Create Live Event - Async (Premium 1080P Live Encoder)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f6b967e4-fa42-4b8c-b1e6-2f6f0151f176",
								"exec": [
									"// This is an async operation so we expect a 202 Accepted response",
									"pm.test(\"Status code is 202 Accepted. Check the Header Azure-AsyncOperation and call the value for status polling\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"// Check that we have an Azure-Async Operation header ",
									"pm.test(\"Azure-AsyncOperation Header exists\", function () {",
									"    pm.response.to.have.header(\"Azure-AsyncOperation\");",
									"});",
									"",
									"",
									"pm.environment.set(\"Last-Azure-AsyncOperation\", pm.response.headers.get(\"Azure-AsyncOperation\") );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"location\": \"{{location}}\",\r\n    \"properties\": {\r\n        \"description\": \"Premium 1080P Live Transcoding Event using RTMP with 2-second keyframe interval and no ip restriction. Encoding Type supports Standard, or Premium1080p \",\r\n        \"vanityUrl\": true,\r\n        \"streamOptions\": [\r\n            \"LowLatency\"\r\n        ],\r\n        \"input\": {\r\n            \"streamingProtocol\": \"RTMP\",\r\n            \"accessToken\": \"3075cc04-62ab-4b37-9a4e-70fdb4521458\",\"keyFrameIntervalDuration\": \"PT2S\",\r\n            \"accessControl\": {\r\n                \"ip\": {\r\n                    \"allow\": [{\r\n                        \"name\": \"AllowAll\",\r\n                        \"address\": \"0.0.0.0\",\r\n                        \"subnetPrefixLength\": 0\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n        \"preview\": {\r\n            \"accessControl\": {\r\n                \"ip\": {\r\n                    \"allow\": [{\r\n                        \"name\": \"AllowAll\",\r\n                        \"address\": \"0.0.0.0\"\r\n                        \"subnetPrefixLength\": 0\r\n                    }]\r\n                }\r\n            }\r\n        },\r\n        \"encoding\": {\r\n            \"encodingType\": \"Premium1080p\",\r\n            \"presetName\": \"\"\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName?api-version={{api-version}}&autoStart={{autoStart}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "autoStart",
									"value": "{{autoStart}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Creates a Live Event with Premium 1080p live encoder. NOTE: this is an asynchronous operation which can take time.  You should use standard Azure ARM async pattern to poll for the status of the provisioning of this resource. See - https://docs.microsoft.com/azure/azure-resource-manager/resource-manager-async-operations - The response code will be a 202 Accept, at which point you should parse the Azure-AsyncOperation header for the path to poll for status. Once the status is Succeeded, you can make a GET request on the LiveEvent to access the RTMP ingest URLs and the Preview manifest endpoints"
					},
					"response": []
				},
				{
					"name": "Step 2: Poll for Live Event provisioning Status after Create if 202 Accepted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27e713f8-8770-42e6-b063-67f19c16566d",
								"exec": [
									"// This is an async operation so we expect a 202 Accepted response",
									"pm.test(\"Status code is 202 Accepted. Check the Header Azure-AsyncOperation and call the value for status polling\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"// Check that we have an Azure-Async Operation header ",
									"pm.test(\"Azure-AsyncOperation Header exists\", function () {",
									"    pm.response.to.have.header(\"Azure-AsyncOperation\");",
									"});",
									"",
									"",
									"pm.environment.set(\"Last-Azure-AsyncOperation\", pm.response.headers.get(\"Azure-AsyncOperation\") );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{Last-Azure-AsyncOperation}}",
							"host": [
								"{{Last-Azure-AsyncOperation}}"
							]
						},
						"description": "If you receive a 202 Accepted after calling create on Live Event, this eses the value of the Azure-AsyncOperation header to poll for the status of the operation after Create. \n\nCreating a live event is a long running async operation which uses the standard Azure ARM async pattern. See - https://docs.microsoft.com/azure/azure-resource-manager/resource-manager-async-operations"
					},
					"response": []
				},
				{
					"name": "Update Live Event",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"location\": \"{{location}}\",\r\n  \"tags\": {\r\n    \"tag1\": \"value1\",\r\n    \"tag2\": \"value2\",\r\n    \"tag3\": \"value3\"\r\n  },\r\n  \"properties\": {\r\n    \"description\": \"test event updated\",\r\n    \"input\": {\r\n      \"streamingProtocol\": \"FragmentedMP4\",\r\n      \"keyFrameIntervalDuration\": \"PT6S\"\r\n    },\r\n    \"preview\": {\r\n      \"accessControl\": {\r\n        \"ip\": {\r\n          \"allow\": [\r\n            {\r\n              \"name\": \"AllowOne\",\r\n              \"address\": \"192.1.1.0\"\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Updates a existing Live Event."
					},
					"response": []
				},
				{
					"name": "Delete Live Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Deletes a Live Event."
					},
					"response": []
				},
				{
					"name": "Start Live Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName/start?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName",
								"start"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Starts an existing Live Event."
					},
					"response": []
				},
				{
					"name": "Stop Live Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"removeOutputsOnStop\": true\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName/stop?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName",
								"stop"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Stops an existing Live Event."
					},
					"response": []
				},
				{
					"name": "Reset Live Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName/reset?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName",
								"reset"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Resets an existing Live Event."
					},
					"response": []
				},
				{
					"name": "List Live Outputs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName/liveOutputs?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName",
								"liveOutputs"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								}
							]
						},
						"description": "Lists the Live Outputs in the Live Event."
					},
					"response": []
				},
				{
					"name": "Get Live Output",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName/liveOutputs/:liveOutputName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName",
								"liveOutputs",
								":liveOutputName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								},
								{
									"key": "liveOutputName",
									"value": "{{liveOutputName}}"
								}
							]
						},
						"description": "Gets a Live Output."
					},
					"response": []
				},
				{
					"name": "Create Live Output",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"properties\": {\r\n        \"description\": \"myOutputAsset\",\r\n        \"assetName\": \"myOutputAsset\",\r\n        \"archiveWindowLength\": \"PT5M\",\r\n        \"manifestName\": \"testmanifest\",\r\n        \"hls\": {\r\n          \"fragmentsPerTsSegment\": 1\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName/liveOutputs/:liveOutputName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName",
								"liveOutputs",
								":liveOutputName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								},
								{
									"key": "liveOutputName",
									"value": "{{liveOutputName}}"
								}
							]
						},
						"description": "Creates a Live Output."
					},
					"response": []
				},
				{
					"name": "Delete Live Output",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/liveEvents/:liveEventName/liveOutputs/:liveOutputName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"liveEvents",
								":liveEventName",
								"liveOutputs",
								":liveOutputName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "liveEventName",
									"value": "{{liveEventName}}"
								},
								{
									"key": "liveOutputName",
									"value": "{{liveOutputName}}"
								}
							]
						},
						"description": "Deletes a Live Output."
					},
					"response": []
				},
				{
					"name": "List StreamingEndpoints",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/streamingEndpoints?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"streamingEndpoints"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								}
							]
						},
						"description": "Lists the StreamingEndpoints in the account."
					},
					"response": []
				},
				{
					"name": "Get StreamingEndpoint",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/streamingEndpoints/:streamingEndpointName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"streamingEndpoints",
								":streamingEndpointName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingEndpointName",
									"value": "{{streamingEndpointName}}"
								}
							]
						},
						"description": "Gets a StreamingEndpoint."
					},
					"response": []
				},
				{
					"name": "Create StreamingEndpoint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"location\": \"{{location}}\",\r\n  \"tags\": {\r\n    \"custom tag 1\": \"value 1\",\r\n    \"custom tag 2\": \"value 2\"\r\n  },\r\n  \"properties\": {\r\n    \"description\": \"test Streaming Endpoint\",\r\n    \"scaleUnits\": 0,\r\n    \"availabilitySetName\": \"availableset\",\r\n    \"accessControl\": {\r\n      \"akamai\": {\r\n        \"akamaiSignatureHeaderAuthenticationKeyList\": [\r\n          {\r\n            \"identifier\": \"id1\",\r\n            \"expiration\": \"2029-12-31T16:00:00-08:00\",\r\n            \"base64Key\": \"dGVzdGlkMQ==\"\r\n          },\r\n          {\r\n            \"identifier\": \"id2\",\r\n            \"expiration\": \"2030-12-31T16:00:00-08:00\",\r\n            \"base64Key\": \"dGVzdGlkMQ==\"\r\n          }\r\n        ]\r\n      },\r\n      \"ip\": {\r\n        \"allow\": [\r\n          {\r\n            \"name\": \"AllowedIp\",\r\n            \"address\": \"0.0.0.0\"\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"cdnEnabled\": true\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/streamingEndpoints/:streamingEndpointName?api-version={{api-version}}&autoStart={{autoStart}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"streamingEndpoints",
								":streamingEndpointName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								},
								{
									"key": "autoStart",
									"value": "{{autoStart}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingEndpointName",
									"value": "{{streamingEndpointName}}"
								}
							]
						},
						"description": "Creates a StreamingEndpoint."
					},
					"response": []
				},
				{
					"name": "Update StreamingEndpoint",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"location\": \"{{location}}\",\r\n  \"tags\": {\r\n    \"tag3\": \"value3\",\r\n    \"tag5\": \"value5\"\r\n  },\r\n  \"properties\": {\r\n    \"description\": \"test event 2\",\r\n    \"scaleUnits\": 2\r\n  }\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/streamingEndpoints/:streamingEndpointName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"streamingEndpoints",
								":streamingEndpointName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingEndpointName",
									"value": "{{streamingEndpointName}}"
								}
							]
						},
						"description": "Updates a existing StreamingEndpoint."
					},
					"response": []
				},
				{
					"name": "Delete StreamingEndpoint",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/streamingEndpoints/:streamingEndpointName?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"streamingEndpoints",
								":streamingEndpointName"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingEndpointName",
									"value": "{{streamingEndpointName}}"
								}
							]
						},
						"description": "Deletes a StreamingEndpoint."
					},
					"response": []
				},
				{
					"name": "Start StreamingEndpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/streamingEndpoints/:streamingEndpointName/start?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"streamingEndpoints",
								":streamingEndpointName",
								"start"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingEndpointName",
									"value": "{{streamingEndpointName}}"
								}
							]
						},
						"description": "Starts an existing StreamingEndpoint."
					},
					"response": []
				},
				{
					"name": "Stop StreamingEndpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/streamingEndpoints/:streamingEndpointName/stop?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"streamingEndpoints",
								":streamingEndpointName",
								"stop"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingEndpointName",
									"value": "{{streamingEndpointName}}"
								}
							]
						},
						"description": "Stops an existing StreamingEndpoint."
					},
					"response": []
				},
				{
					"name": "Scale StreamingEndpoint",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"scaleUnit\": 5\r\n}"
						},
						"url": {
							"raw": "https://management.azure.com/subscriptions/:subscriptionId/resourceGroups/:resourceGroup/providers/Microsoft.Media/mediaservices/:accountName/streamingEndpoints/:streamingEndpointName/scale?api-version={{api-version}}",
							"protocol": "https",
							"host": [
								"management",
								"azure",
								"com"
							],
							"path": [
								"subscriptions",
								":subscriptionId",
								"resourceGroups",
								":resourceGroup",
								"providers",
								"Microsoft.Media",
								"mediaservices",
								":accountName",
								"streamingEndpoints",
								":streamingEndpointName",
								"scale"
							],
							"query": [
								{
									"key": "api-version",
									"value": "{{api-version}}"
								}
							],
							"variable": [
								{
									"key": "subscriptionId",
									"value": "{{subscriptionId}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{resourceGroup}}"
								},
								{
									"key": "accountName",
									"value": "{{accountName}}"
								},
								{
									"key": "streamingEndpointName",
									"value": "{{streamingEndpointName}}"
								}
							]
						},
						"description": "Scales an existing StreamingEndpoint."
					},
					"response": []
				}
			],
			"description": "Streaming and Live operations",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ad2ad3d8-1207-4f4c-803a-381d7b1907c7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d7b2dec5-0410-4c39-b4a9-c9c4999793bd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{AccessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e3d5821a-30a6-4b63-a17e-f36ab00e32c3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f44802e3-1014-42f0-a8b3-817430095333",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "f5f29589-e9e9-40bf-a718-93df7b37e41b",
			"key": "ARM_API_ENDPOINT",
			"value": "management.azure.com",
			"type": "string"
		}
	]
}